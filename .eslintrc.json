{
	"env": {
		"es6": true,
		"node": true,
		"es2021": true,
		"jest/globals": true
	},
	"settings": {
		"react": {
			"pragma": "React",
			"version": "detect"
		},
		"import/parsers": {
			"@typescript-eslint/parser": [".ts", ".tsx"]
		}
	},
	"extends": [
		"eslint:recommended",
		"plugin:@typescript-eslint/eslint-recommended",
		"plugin:@typescript-eslint/recommended",
		"plugin:@typescript-eslint/recommended-requiring-type-checking",
		"plugin:promise/recommended",
		"plugin:json/recommended-with-comments",
		"plugin:import/typescript",
		"plugin:jest/recommended",
		"plugin:react/recommended",
		"plugin:react-hooks/recommended",
		"plugin:react/jsx-runtime"
	],
	"overrides": [
		{
			"files": ["*.js", "*.jsx", "*.cjs", "*.mjs"],
			"rules": {
				"@typescript-eslint/no-unsafe-assignment": "off",
				"@typescript-eslint/require-await": "off",
				"@typescript-eslint/await-thenable": "off",
				"@typescript-eslint/consistent-type-exports": "off",
				"@typescript-eslint/restrict-template-expressions": "off",
				"@typescript-eslint/no-floating-promises": "off",
				"@typescript-eslint/no-implied-eval": "off",
				"@typescript-eslint/no-misused-promises": "off",
				"@typescript-eslint/no-unnecessary-type-assertion": "off",
				"@typescript-eslint/no-unsafe-argument": "off",
				"@typescript-eslint/no-unsafe-call": "off",
				"@typescript-eslint/no-unsafe-member-access": "off",
				"@typescript-eslint/no-unsafe-return": "off",
				"@typescript-eslint/restrict-plus-operands": "off",
				"@typescript-eslint/unbound-method": "off",
				"@typescript-eslint/no-var-requires": "off",
				"@typescript-eslint/no-base-to-string": "off",
				"@typescript-eslint/no-duplicate-type-constituents": "off",
				"@typescript-eslint/no-redundant-type-constituents": "off",
				"@typescript-eslint/no-unsafe-enum-comparison": "off"
			}
		},
		{
			"files": ["*.json"],
			"parser": "espree",
			"rules": {
				"@typescript-eslint/require-await": "off",
				"@typescript-eslint/await-thenable": "off",
				"@typescript-eslint/consistent-type-exports": "off",
				"@typescript-eslint/restrict-template-expressions": "off",
				"@typescript-eslint/no-floating-promises": "off",
				"@typescript-eslint/no-implied-eval": "off",
				"@typescript-eslint/no-misused-promises": "off",
				"@typescript-eslint/no-unnecessary-type-assertion": "off",
				"@typescript-eslint/no-unsafe-argument": "off",
				"@typescript-eslint/no-unsafe-assignment": "off",
				"@typescript-eslint/no-unsafe-call": "off",
				"@typescript-eslint/no-unsafe-member-access": "off",
				"@typescript-eslint/no-unsafe-return": "off",
				"@typescript-eslint/restrict-plus-operands": "off",
				"@typescript-eslint/unbound-method": "off",
				"@typescript-eslint/no-var-requires": "off",
				"@typescript-eslint/no-base-to-string": "off",
				"@typescript-eslint/no-duplicate-type-constituents": "off",
				"@typescript-eslint/no-redundant-type-constituents": "off",
				"@typescript-eslint/no-unsafe-enum-comparison": "off"
			}
		}
	],
	"globals": {
		"__dirname": true,
		"Atomics": "readonly",
		"SharedArrayBuffer": "readonly"
	},
	"parser": "@typescript-eslint/parser",
	"parserOptions": {
		"extraFileExtensions": [".json"],
		"ecmaVersion": "latest",
		"sourceType": "module",
		"ecmaFeatures": {
			"jsx": true,
			"globalReturn": true,
			"impliedStrict": true
		},
		"project": "tsconfig.json"
	},
	"plugins": [
		"react",
		"react-hooks",
		"jest",
		"es5",
		"html",
		"@typescript-eslint",
		"simple-import-sort",
		"promise",
		"deprecate",
		"node",
		"import",
		"@getify/proper-arrows",
		"eslint-plugin",
		"eslint-plugin-tsdoc",
		"@typescript-eslint/eslint-plugin",
		"jsdoc"
	],
	"rules": {
		"quote-props": ["warn", "as-needed"],
		"react/no-unescaped-entities": "warn",
		"no-dupe-class-members": 0,
		"simple-import-sort/imports": "warn",
		"simple-import-sort/exports": "warn",
		"import/first": "warn",
		"import/newline-after-import": "warn",
		"import/no-duplicates": "warn",
		"promise/always-return": ["warn", { "ignoreLastCallback": true }],
		// to enforce using type for object type definitions, can be type or interface
		"@typescript-eslint/consistent-type-definitions": ["warn", "interface"],
		"@typescript-eslint/array-type": ["warn", { "default": "array" }],
		"@typescript-eslint/require-await": "warn",
		"@typescript-eslint/await-thenable": "warn",
		"@typescript-eslint/consistent-type-exports": "warn",
		"@typescript-eslint/restrict-template-expressions": [
			"warn",
			{ "allowNumber": true, "allowBoolean": true, "allowNullish": true }
		],
		"@typescript-eslint/no-explicit-any": 0,
		"new-cap": 1,
		"camelcase": 0,
		"@typescript-eslint/no-unused-vars": [
			"warn",
			{
				"vars": "all",
				"args": "all",
				"ignoreRestSiblings": false,
				"argsIgnorePattern": "^_"
			}
		],
		"prefer-promise-reject-errors": "warn",
		"no-await-in-loop": "warn",
		"no-return-await": "warn",
		"no-prototype-builtins": "warn",
		"no-empty": "warn",
		"arrow-body-style": ["warn", "as-needed"],
		"no-useless-return": "warn",
		"require-await": "warn",
		"prefer-arrow-callback": "warn",
		"no-var": "warn",
		"no-fallthrough": "warn",
		"no-extra-parens": ["warn", "functions"],
		"no-extra-semi": "warn",
		"curly": "warn",
		"eqeqeq": "warn",
		"no-else-return": "warn",
		"prefer-const": "warn",
		"no-console": 1,
		"indent": ["warn", "tab", { "SwitchCase": 1 }],
		"quotes": ["warn", "single"],
		"semi": ["warn", "never"]
	},
	"ignorePatterns": [
		"node_modules",
		"dist",
		"build",
		".expo",
		".jest",
		".vscode",
		"coverage",
		"patches",
		"report",
		"assets",
		"scripts",
		"scripts/dev",
		"scripts/**/*.*",
		"scripts/dev/*"
	]
}
